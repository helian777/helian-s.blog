{"meta":{"title":"helian's blog","subtitle":null,"description":null,"author":"helian","url":""},"pages":[{"title":"about","date":"2018-12-12T14:14:36.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"about/index.html","permalink":"/about/index.html","excerpt":"","text":"[さくら荘のhojun] 与&nbsp; Mashiro&nbsp; （ 真（ま）白（しろ） ） 对话中... bot_ui_ini()","keywords":"关于"},{"title":"bangumi","date":"2019-02-10T13:32:48.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"bangumi/index.html","permalink":"/bangumi/index.html","excerpt":"","text":"","keywords":null},{"title":"client","date":"2018-12-20T15:13:35.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"client/index.html","permalink":"/client/index.html","excerpt":"","text":"直接下载 or 扫码下载：","keywords":"Android客户端"},{"title":"donate","date":"2018-12-20T15:13:05.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"donate/index.html","permalink":"/donate/index.html","excerpt":"","text":"","keywords":"谢谢饲主了喵~"},{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2020-03-16T10:41:30.000Z","comments":true,"path":"comment/index.html","permalink":"/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》","keywords":"留言板"},{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"lab/index.html","permalink":"/lab/index.html","excerpt":"","text":"sakura主题balabala","keywords":"Lab实验室"},{"title":"links","date":"2018-12-19T15:11:06.000Z","updated":"2020-03-16T10:41:30.000Z","comments":true,"path":"links/index.html","permalink":"/links/index.html","excerpt":"","text":"","keywords":"友人帐"},{"title":"music","date":"2018-12-20T15:14:28.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"music/index.html","permalink":"/music/index.html","excerpt":"","text":"","keywords":"喜欢的音乐"},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2020-03-16T10:41:30.000Z","comments":true,"path":"rss/index.html","permalink":"/rss/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-12-12T14:14:16.000Z","updated":"2020-03-16T10:41:30.000Z","comments":true,"path":"tags/index.html","permalink":"/tags/index.html","excerpt":"","text":""},{"title":"theme-sakura","date":"2019-01-04T14:53:25.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"theme-sakura/index.html","permalink":"/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro","keywords":"Hexo 主题 Sakura 🌸"},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"video/index.html","permalink":"/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }","keywords":"B站"}],"posts":[{"title":"sql注入脚本","slug":"sql注入脚本","date":"2020-06-07T04:43:59.000Z","updated":"2020-06-07T04:49:32.144Z","comments":true,"path":"/sql注入脚本/","link":"","permalink":"/sql注入脚本/","excerpt":"","text":"sql注入脚本单线程版本 time bool","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"sql注入","slug":"sql注入","permalink":"/tags/sql注入/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"C语言编译步骤","slug":"C语言编译步骤","date":"2020-06-02T14:50:21.000Z","updated":"2020-06-02T15:33:13.658Z","comments":true,"path":"/C语言编译步骤/","link":"","permalink":"/C语言编译步骤/","excerpt":"","text":"C语言编译过程先上一段最简单的代码 #include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; #define PI 3,14 int main(void){ float r = 2.1; float s; s = printf(&quot;%f\\n&quot;,PI * r * r); s = printf(&quot;%.2f\\n&quot;,PI * r * r); char shell; shell = system(&quot;whoami&quot;); printf(&quot;%s&quot;,shell); } include包含，stdio.h为头文件，define宏定义一个常量PI，float单精度浮点型、%f占位符表示一个单精度浮点数保留到小数点后6位、.%2f保留到小数点后2位四舍五入 C语言编译成可执行文件操作 gcc test.c -o test 然而C语言的编译过程并非上面的一步编译，由下面的四个步骤组成 预处理：展开头文件、展开宏定义、条件编译、删除注释 编译：编译成汇编语言并检查语法错误 汇编：将汇编语言转换成机器语言(二进制文件) 链接：把二进制文件”打包”成为可执行文件 动作 指令 预处理 gcc -E test.c -o test.i 编译 gcc -S test.i -o test.s 汇编 gcc -c test.s -o test.o 链接 gcc test.o -o test Loading…","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"C语言","slug":"C语言","permalink":"/tags/C语言/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"Manjaro i3上手配置","slug":"Manjaro-i3上手配置","date":"2020-06-02T08:33:46.000Z","updated":"2020-06-07T15:03:49.962Z","comments":true,"path":"/Manjaro-i3上手配置/","link":"","permalink":"/Manjaro-i3上手配置/","excerpt":"","text":"安装i3i3是一款清晰便捷的窗口管理器并兼容多个linux发行版本(Arch 天下第一！) 安装i3的只需要直接在初始桌面环境下pacman就可以了 pacman -S i3 #我全都要 安装完毕后reboot重启一下后在登陆输入密码进入系统的那个界面点击右下角的齿轮按钮，然后选择i3进入 首次配置i3，第一个步骤就是让你设置一个$mod键它是i3下面的快捷键几乎所有的操作都要基于它来执行;它会让你选择设置$mod键为win还是alt，我这里是默认的win键，接着回车即可，自此i3安装完毕 i3的快捷键在进入配置i3前先说下快捷键吧，正常的linux都是用鼠标啥的操作但i3下99%都是基于键盘指令完成的-&gt; $mod 功能 键位 打开Terminal $mod + 回车 切换工作区 $mod + num 全屏 $mod + f 切换窗口分屏方式 $mod + e 水平分屏幕 $mod + v 垂直分屏 $mod + h 修改窗口分辨率(用方向键控制，回车结束) $mod + r 关闭窗口 $mod + Shift + q 刷新i3 $mod + Shift + c 把一个窗口移动到某个工作区 $mod + Shift + num 配置i3进入你会发现黑屏桌面啥都没有，鼠标咋点都不好使，这就是i3的魅力;前面设置的$mod建用它启动命令，按下$mod + Enter 神奇的发现终端出来了，开干～ 首先替换掉这个该死丑陋的终端，我用的终端是fish sudo pacman -S fish #安装fish which fish sudo chsh -s fish的路径 #把默认shell换成fish #安装oh-my-fish https://github.com/oh-my-fish/oh-my-fish.git #配置fish主题 fish_config 什么垃圾东西终端都没法半透明，黑屏壁纸？？ 因为i3是一个轻盈的窗口管理器并没有自带渲染器所以无法达到终端半透明，要想半透明需要手动安装一个渲染器compton，我使用的Terminal是alacritty一款用GPU渲染的终端，壁纸的话有很多选择我个人使用的是variety它是一个动态切换的壁纸软件而且它的壁纸都是从各大网站下载来的 安装上述软件： sudo pacman -S alacritty sudo pacman -S compton sudo pacman -S variety 美化alacritty Manjaro中配置文件在/usr/share/doc/alacritty/example/alacritty.yml，把alacritty.yml移动到~/.config/alacritty/alacritty.yml # Configuration for Alacritty, the GPU enhanced terminal emulator. # Any items in the `env` entry below will be added as # environment variables. Some entries may override variables # set by alacritty itself. #env: # TERM variable # # This value is used to set the `$TERM` environment variable for # each instance of Alacritty. If it is not present, alacritty will # check the local terminfo database and use `alacritty` if it is # available, otherwise `xterm-256color` is used. #TERM: alacritty #window: # Window dimensions (changes require restart) # # Specified in number of columns/lines, not pixels. # If both are `0`, this setting is ignored. #dimensions: # columns: 0 # lines: 0 # Window position (changes require restart) # # Specified in number of pixels. # If the position is not set, the window manager will handle the placement. #position: # x: 0 # y: 0 # Window padding (changes require restart) # # Blank space added around the window in pixels. This padding is scaled # by DPI and the specified value is always added at both opposing sides. #padding: # x: 0 # y: 0 # Spread additional padding evenly around the terminal content. #dynamic_padding: false # Window decorations # # Values for `decorations`: # - full: Borders and title bar # - none: Neither borders nor title bar # # Values for `decorations` (macOS only): # - transparent: Title bar, transparent background and title bar buttons # - buttonless: Title bar, transparent background, but no title bar buttons #decorations: full # Startup Mode (changes require restart) # # Values for `startup_mode`: # - Windowed # - Maximized # - Fullscreen # # Values for `startup_mode` (macOS only): # - SimpleFullscreen #startup_mode: Windowed # Window title #title: Alacritty # Window class (Linux/BSD only): #class: # Application instance name #instance: Alacritty # General application class #general: Alacritty # GTK theme variant (Linux/BSD only) # # Override the variant of the GTK theme. Commonly supported values are `dark` and `light`. # Set this to `None` to use the default theme variant. #gtk_theme_variant: None #scrolling: # Maximum number of lines in the scrollback buffer. # Specifying &#39;0&#39; will disable scrolling. #history: 10000 # Number of lines the viewport will move for every line scrolled when # scrollback is enabled (history &gt; 0). #multiplier: 3 # Font configuration font: # Normal (roman) font face normal: # Font family # # Default: # - (macOS) Menlo # - (Linux/BSD) monospace # - (Windows) Consolas family: Hack # The `style` can be specified to pick a specific face. #style: Regular # Bold font face bold: # Font family # # If the bold family is not specified, it will fall back to the # value specified for the normal font. family: Hack # The `style` can be specified to pick a specific face. #style: Bold # Italic font face italic: # Font family # # If the italic family is not specified, it will fall back to the # value specified for the normal font. family: Hack # The `style` can be specified to pick a specific face. #style: Italic # Bold italic font face #bold_italic: # Font family # # If the bold italic family is not specified, it will fall back to the # value specified for the normal font. #family: monospace # The `style` can be specified to pick a specific face. #style: Bold Italic # Point size size: 12.0 # Offset is the extra space around each character. `offset.y` can be thought of # as modifying the line spacing, and `offset.x` as modifying the letter spacing. #offset: # x: 0 # y: 0 # Glyph offset determines the locations of the glyphs within their cells with # the default being at the bottom. Increasing `x` moves the glyph to the right, # increasing `y` moves the glyph upwards. #glyph_offset: # x: 0 # y: 0 # Thin stroke font rendering (macOS only) # # Thin strokes are suitable for retina displays, but for non-retina screens # it is recommended to set `use_thin_strokes` to `false` # # macOS &gt;= 10.14.x: # # If the font quality on non-retina display looks bad then set # `use_thin_strokes` to `true` and enable font smoothing by running the # following command: # `defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO` # # This is a global setting and will require a log out or restart to take # effect. #use_thin_strokes: true # If `true`, bold text is drawn using the bright color variants. #draw_bold_text_with_bright_colors: false # Colors (Tomorrow Night Bright) colors: # Default colors primary: background: &#39;0x282a36&#39; foreground: &#39;0xf8f8f2&#39; # Normal colors normal: black: &#39;0x44475a&#39; red: &#39;0xff5555&#39; green: &#39;0x50fa7b&#39; yellow: &#39;0xf1fa8c&#39; blue: &#39;0xbd93f9&#39; magenta: &#39;0xff79c6&#39; cyan: &#39;0x8be9fd&#39; white: &#39;0xffffff&#39; # Bright colors bright: black: &#39;0x44475a&#39; red: &#39;0xff5555&#39; green: &#39;0x50fa7b&#39; yellow: &#39;0xf1fa8c&#39; blue: &#39;0xbd93f9&#39; magenta: &#39;0xff79c6&#39; cyan: &#39;0x8be9fd&#39; white: &#39;0xffffff&#39; # Bright and dim foreground colors # # The dimmed foreground color is calculated automatically if it is not present. # If the bright foreground color is not set, or `draw_bold_text_with_bright_colors` # is `false`, the normal foreground color will be used. #dim_foreground: &#39;#9a9a9a&#39; #bright_foreground: &#39;#ffffff&#39; # Cursor colors # # Colors which should be used to draw the terminal cursor. If these are unset, # the cursor color will be the inverse of the cell color. #cursor: # text: &#39;#000000&#39; # cursor: &#39;#ffffff&#39; # Selection colors # # Colors which should be used to draw the selection area. If selection # background is unset, selection color will be the inverse of the cell colors. # If only text is unset the cell text color will remain the same. #selection: # text: &#39;#eaeaea&#39; # background: &#39;#404040&#39; # Normal colors #normal: # black: &#39;#000000&#39; # red: &#39;#d54e53&#39; # green: &#39;#b9ca4a&#39; # yellow: &#39;#e6c547&#39; # blue: &#39;#7aa6da&#39; # magenta: &#39;#c397d8&#39; # cyan: &#39;#70c0ba&#39; # white: &#39;#eaeaea&#39; # Bright colors #bright: # black: &#39;#666666&#39; # red: &#39;#ff3334&#39; # green: &#39;#9ec400&#39; # yellow: &#39;#e7c547&#39; # blue: &#39;#7aa6da&#39; # magenta: &#39;#b77ee0&#39; # cyan: &#39;#54ced6&#39; # white: &#39;#ffffff&#39; # Dim colors # # If the dim colors are not set, they will be calculated automatically based # on the `normal` colors. #dim: # black: &#39;#000000&#39; # red: &#39;#8c3336&#39; # green: &#39;#7a8530&#39; # yellow: &#39;#97822e&#39; # blue: &#39;#506d8f&#39; # magenta: &#39;#80638e&#39; # cyan: &#39;#497e7a&#39; # white: &#39;#9a9a9a&#39; # Indexed Colors # # The indexed colors include all colors from 16 to 256. # When these are not set, they&#39;re filled with sensible defaults. # # Example: # `- { index: 16, color: &#39;#ff00ff&#39; }` # #indexed_colors: [] # Visual Bell # # Any time the BEL code is received, Alacritty &quot;rings&quot; the visual bell. Once # rung, the terminal background will be set to white and transition back to the # default background color. You can control the rate of this transition by # setting the `duration` property (represented in milliseconds). You can also # configure the transition function by setting the `animation` property. # # Values for `animation`: # - Ease # - EaseOut # - EaseOutSine # - EaseOutQuad # - EaseOutCubic # - EaseOutQuart # - EaseOutQuint # - EaseOutExpo # - EaseOutCirc # - Linear # # Specifying a `duration` of `0` will disable the visual bell. #visual_bell: # animation: EaseOutExpo # duration: 0 # color: &#39;#ffffff&#39; # Background opacity # # Window opacity as a floating point number from `0.0` to `1.0`. # The value `0.0` is completely transparent and `1.0` is opaque. background_opacity: 0.8 #selection: #semantic_escape_chars: &quot;,│`|:\\&quot;&#39; ()[]{}&lt;&gt;\\t&quot; # When set to `true`, selected text will be copied to the primary clipboard. #save_to_clipboard: false # Allow terminal applications to change Alacritty&#39;s window title. #dynamic_title: true #cursor: # Cursor style # # Values for `style`: # - ▇ Block # - _ Underline # - | Beam #style: Block # If this is `true`, the cursor will be rendered as a hollow box when the # window is not focused. #unfocused_hollow: true # Live config reload (changes require restart) #live_config_reload: true # Shell # # You can set `shell.program` to the path of your favorite shell, e.g. `/bin/fish`. # Entries in `shell.args` are passed unmodified as arguments to the shell. # # Default: # - (macOS) /bin/bash --login # - (Linux/BSD) user login shell # - (Windows) powershell #shell: # program: /bin/bash # args: # - --login # Startup directory # # Directory the shell is started in. If this is unset, or `None`, the working # directory of the parent process will be used. #working_directory: None # WinPTY backend (Windows only) # # Alacritty defaults to using the newer ConPTY backend if it is available, # since it resolves a lot of bugs and is quite a bit faster. If it is not # available, the the WinPTY backend will be used instead. # # Setting this option to `true` makes Alacritty use the legacy WinPTY backend, # even if the ConPTY backend is available. #winpty_backend: false # Send ESC (\\x1b) before characters when alt is pressed. #alt_send_esc: true #mouse: # Click settings # # The `double_click` and `triple_click` settings control the time # alacritty should wait for accepting multiple clicks as one double # or triple click. #double_click: { threshold: 300 } #triple_click: { threshold: 300 } # If this is `true`, the cursor is temporarily hidden when typing. #hide_when_typing: false #url: # URL launcher # # This program is executed when clicking on a text which is recognized as a URL. # The URL is always added to the command as the last parameter. # # When set to `None`, URL launching will be disabled completely. # # Default: # - (macOS) open # - (Linux/BSD) xdg-open # - (Windows) explorer #launcher: # program: xdg-open # args: [] # URL modifiers # # These are the modifiers that need to be held down for opening URLs when clicking # on them. The available modifiers are documented in the key binding section. #modifiers: None # Mouse bindings # # Mouse bindings are specified as a list of objects, much like the key # bindings further below. # # To trigger mouse bindings when an application running within Alacritty captures the mouse, the # `Shift` modifier is automatically added as a requirement. # # Each mouse binding will specify a: # # - `mouse`: # # - Middle # - Left # - Right # - Numeric identifier such as `5` # # - `action` (see key bindings) # # And optionally: # # - `mods` (see key bindings) #mouse_bindings: # - { mouse: Middle, action: PasteSelection } # Key bindings # # Key bindings are specified as a list of objects. For example, this is the # default paste binding: # # `- { key: V, mods: Control|Shift, action: Paste }` # # Each key binding will specify a: # # - `key`: Identifier of the key pressed # # - A-Z # - F1-F24 # - Key0-Key9 # # A full list with available key codes can be found here: # https://docs.rs/glutin/*/glutin/event/enum.VirtualKeyCode.html#variants # # Instead of using the name of the keys, the `key` field also supports using # the scancode of the desired key. Scancodes have to be specified as a # decimal number. This command will allow you to display the hex scancodes # for certain keys: # # `showkey --scancodes`. # # Then exactly one of: # # - `chars`: Send a byte sequence to the running application # # The `chars` field writes the specified string to the terminal. This makes # it possible to pass escape sequences. To find escape codes for bindings # like `PageUp` (`&quot;\\x1b[5~&quot;`), you can run the command `showkey -a` outside # of tmux. Note that applications use terminfo to map escape sequences back # to keys. It is therefore required to update the terminfo when changing an # escape sequence. # # - `action`: Execute a predefined action # # - Copy # - Paste # - PasteSelection # - IncreaseFontSize # - DecreaseFontSize # - ResetFontSize # - ScrollPageUp # - ScrollPageDown # - ScrollLineUp # - ScrollLineDown # - ScrollToTop # - ScrollToBottom # - ClearHistory # - Hide # - Minimize # - Quit # - ToggleFullscreen # - SpawnNewInstance # - ClearLogNotice # - ReceiveChar # - None # # (macOS only): # - ToggleSimpleFullscreen: Enters fullscreen without occupying another space # # - `command`: Fork and execute a specified command plus arguments # # The `command` field must be a map containing a `program` string and an # `args` array of command line parameter strings. For example: # `{ program: &quot;alacritty&quot;, args: [&quot;-e&quot;, &quot;vttest&quot;] }` # # And optionally: # # - `mods`: Key modifiers to filter binding actions # # - Command # - Control # - Option # - Super # - Shift # - Alt # # Multiple `mods` can be combined using `|` like this: # `mods: Control|Shift`. # Whitespace and capitalization are relevant and must match the example. # # - `mode`: Indicate a binding for only specific terminal reported modes # # This is mainly used to send applications the correct escape sequences # when in different modes. # # - AppCursor # - AppKeypad # - Alt # # A `~` operator can be used before a mode to apply the binding whenever # the mode is *not* active, e.g. `~Alt`. # # Bindings are always filled by default, but will be replaced when a new # binding with the same triggers is defined. To unset a default binding, it can # be mapped to the `ReceiveChar` action. Alternatively, you can use `None` for # a no-op if you do not wish to receive input characters for that binding. # # If the same trigger is assigned to multiple actions, all of them are executed # at once. #key_bindings: # (Windows, Linux, and BSD only) #- { key: V, mods: Control|Shift, action: Paste } #- { key: C, mods: Control|Shift, action: Copy } #- { key: Insert, mods: Shift, action: PasteSelection } #- { key: Key0, mods: Control, action: ResetFontSize } #- { key: Equals, mods: Control, action: IncreaseFontSize } #- { key: Add, mods: Control, action: IncreaseFontSize } #- { key: Subtract, mods: Control, action: DecreaseFontSize } #- { key: Minus, mods: Control, action: DecreaseFontSize } # (Windows only) #- { key: Return, mods: Alt, action: ToggleFullscreen } # (macOS only) #- { key: Key0, mods: Command, action: ResetFontSize } #- { key: Equals, mods: Command, action: IncreaseFontSize } #- { key: Add, mods: Command, action: IncreaseFontSize } #- { key: Minus, mods: Command, action: DecreaseFontSize } #- { key: K, mods: Command, action: ClearHistory } #- { key: K, mods: Command, chars: &quot;\\x0c&quot; } #- { key: V, mods: Command, action: Paste } #- { key: C, mods: Command, action: Copy } #- { key: H, mods: Command, action: Hide } #- { key: M, mods: Command, action: Minimize } #- { key: Q, mods: Command, action: Quit } #- { key: W, mods: Command, action: Quit } #- { key: F, mods: Command|Control, action: ToggleFullscreen } #- { key: Paste, action: Paste } #- { key: Copy, action: Copy } #- { key: L, mods: Control, action: ClearLogNotice } #- { key: L, mods: Control, chars: &quot;\\x0c&quot; } #- { key: PageUp, mods: Shift, action: ScrollPageUp, mode: ~Alt } #- { key: PageDown, mods: Shift, action: ScrollPageDown, mode: ~Alt } #- { key: Home, mods: Shift, action: ScrollToTop, mode: ~Alt } #- { key: End, mods: Shift, action: ScrollToBottom, mode: ~Alt } #debug: # Display the time it takes to redraw each frame. #render_timer: false # Keep the log file after quitting Alacritty. #persistent_logging: false # Log level # # Values for `log_level`: # - None # - Error # - Warn # - Info # - Debug # - Trace #log_level: Warn # Print all received window events. #print_events: false variety动态壁纸 sudo pacman -S nitrogennitrogen /usr/share/backgrounds #nitrogen设置壁纸variety自定义设置 compton毛玻璃特效 yay -S compton-tryone-git 配置文件： # Shadow shadow = true; no-dnd-shadow = true; no-dock-shadow = true; clear-shadow = true; shadow-radius = 10; shadow-offset-x = -15; shadow-offset-y = -15; shadow-opacity = 0.8; # shadow-red = 0.0; # shadow-green = 0.0; # shadow-blue = 0.0; shadow-exclude = [ &quot;name = &#39;Notification&#39;&quot;, &quot;class_g = &#39;Conky&#39;&quot;, &quot;class_g ?= &#39;Notify-osd&#39;&quot;, &quot;class_g = &#39;Cairo-clock&#39;&quot;, &quot;_GTK_FRAME_EXTENTS@:c&quot; ]; # shadow-exclude = &quot;n:e:Notification&quot;; # shadow-exclude-reg = &quot;x10+0+0&quot;; # xinerama-shadow-crop = true; # Opacity menu-opacity = 0.8; inactive-opacity = 0.88; active-opacity = 1; frame-opacity = 0.7; inactive-opacity-override = false; alpha-step = 0.06; # inactive-dim = 0.2; # inactive-dim-fixed = true; blur-background = true; # blur-background-frame = true; blur-method = &quot;kawase&quot;; blur-strength = 8; blur-kern = &quot;3x3box&quot;; # blur-kern = &quot;5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1&quot;; # blur-background-fixed = true; blur-background-exclude = [ &quot;window_type = &#39;dock&#39;&quot;, &quot;window_type = &#39;desktop&#39;&quot;, &quot;_GTK_FRAME_EXTENTS@:c&quot; ]; # opacity-rule = [ &quot;80:class_g = &#39;URxvt&#39;&quot; ]; # Fading fading = true; fade-delta = 2; fade-in-step = 0.05; fade-out-step = 0.05; # no-fading-openclose = true; # no-fading-destroyed-argb = true; fade-exclude = [ ]; # Other backend = &quot;glx&quot;; mark-wmwin-focused = true; mark-ovredir-focused = true; # use-ewmh-active-win = true; detect-rounded-corners = true; detect-client-opacity = true; refresh-rate = 0; vsync = &quot;none&quot;; dbe = false; paint-on-overlay = true; # sw-opti = true; # unredir-if-possible = true; # unredir-if-possible-delay = 5000; # unredir-if-possible-exclude = [ ]; focus-exclude = [ &quot;class_g = &#39;Cairo-clock&#39;&quot; ]; detect-transient = true; detect-client-leader = true; invert-color-include = [ ]; # resize-damage = 1; # GLX backend # glx-no-stencil = true; glx-copy-from-front = false; # glx-use-copysubbuffermesa = true; # glx-no-rebind-pixmap = true; glx-swap-method = &quot;undefined&quot;; # glx-use-gpushader4 = true; # xrender-sync = true; # xrender-sync-fence = true; # Window type settings wintypes: { tooltip = { fade = true; shadow = true; opacity = 0.75; focus = true; }; }; 安装fish sudo pacman -S fish 自行github oh-my-fish 修改i3配置文件i3的配置文件在~/.config/i3/config,前面安装compton等需要设置开机自启在任意位置插入 exec –no-startup-id varietyexec –no-startup-id comptonexec –no-startup-id fcitx #输入法 把默认的Terminal设置为alacritty，找到$mod + Return 把exec后面的修改为alacritty binsym $mod+Return exec alacritty 设置软件快捷键位，按对应的键位即可开启应用，例子如下 bindsym $mod+z exec –no-startup-id firefox # –no-startup-id取消鼠标忙碌状态","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"Manjaro","slug":"Manjaro","permalink":"/tags/Manjaro/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"hexo折腾记","slug":"hexo╒█╠┌╝╟","date":"2020-05-21T14:15:21.000Z","updated":"2020-05-21T14:34:10.000Z","comments":true,"path":"/hexo╒█╠┌╝╟/","link":"","permalink":"/hexo╒█╠┌╝╟/","excerpt":"","text":"hexo折腾记本人用的manjaro系统，有出入的话请自行百度 hexo前置条件： git Node_js npm hexo 安装Node_js的时候有一个大坑，源里面带的版本太高了安装必报错换到12.14稳定版本解决 设置软连接 ln -s /path/node/bin/node /usr/local/bin/node ln -s /path/node/bin/npm /usr/local/bin/npm npm install hexo -g #安装hexo ln -s /path/node/node_modules/hexo/bin/hexo /usr/local/bin/hexo 检查安装是否成功 node -v npm -v 把前置环境装好后要去github上面注册一个帐号，新建一个仓库用来存放博客的，登陆之后点击头像-&gt;Your repositories-&gt;New-&gt;在用户名后面输入一个名字-&gt;Create a new repository 配置ssh创建博客文件夹 git config --global user.name &quot;Your name&quot; #配置git用户名 git config --global user.email &quot;youremail@example.com&quot; #配置git邮箱 git config --list #查看 接着生成ssh密钥： cd ~/.ssh ssh-keygen -t rsa -C &quot;youremail@example.com&quot; cat id_rsa.pub #把密钥内容复制到github的settings-&gt;New ssh key-&gt;复制内容 ssh -T git@github.com #验证密钥连接情况 关于ssh-keygen的文章：https://www.cnblogs.com/yanglang/p/9563496.html 建立博客文件夹： mkdir &lt;文件夹&gt; cd &lt;文件夹&gt; &amp;&amp; hexo init npm install #安装hexo必备的组件 如果在执行hexo d报错ERROR Deployer not found: git： npm install --save hexo-deployer-git 然后创建修改博客目录下的_config.yml： deploy: type: git repo: 仓库地址 branch: master 终端输入hexo g -d &amp;&amp; hexo clean 等待一会访问博客地址就ok了！ 博客目录： |── _config.yml #网站的配置信息，您可以在此配置参数 ├── node_modules #npm安装的所有程序包 ├── package.json #npm安装的应用程序的信息 ├── package-lock.json #针对和package.json中的应用程序提供更多详细信息 ├── scaffolds #文章模版文件夹 ├── source #资源文件夹，以下划线开头的文件/文件夹会被忽略 | ├── _drafts | └── _posts ├── themes #主题文件夹，Hexo会根据主题来生成网页 | └── landscape #原始的hexo默认主题 ├── yarn-error.log #日志文件 └── .gitignore #忽略文件，用于配置忽略条件 参考文章： https://yremp.club/2019/07/17/linux-install-hexo/#undefinedhttps://zhuanlan.zhihu.com/p/136552969","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"Blog","slug":"Blog","permalink":"/tags/Blog/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]}]}